service: import-service
frameworkVersion: '3'
useDotenv: true

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: eu-west-1
  httpApi:
    cors: true
  environment:
    SQS_URL: ${env.SQS_URL}
    SQS_ARN: ${env.SQS_ARN}
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "s3:ListBucket"
          Resource:
            - "arn:aws:s3:::product-shop-rs"
        - Effect: "Allow"
          Action:
            - "s3:*"
          Resource:
            - "arn:aws:s3:::product-shop-rs/*"
        - Effect: "Allow"
          Action: "sqs:*"
          Resource: "arn:aws:sqs:eu-west-1:248058432125:catalogItemsQueue"

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
          gatewayresponse.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

package:
  individually: true

plugins:
  - serverless-webpack
  - serverless-dotenv-plugin

functions:
  importProductsFile:
    handler: handler.importProductsFile
    events:
      - http:
          path: /import
          method: get
          request:
            parameters:
              querystrings:
                name: true
          cors: true
          authorizer:
            arn: "arn:aws:lambda:eu-west-1:248058432125:function:authorization-service-dev-basicAuthorizer"
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token
  importFileParser:
    handler: handler.importFileParser
    events:
      - s3:
          bucket: product-shop-rs
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true